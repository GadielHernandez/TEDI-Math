<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_area_money</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selector Variables

// Status variables
drawed = false; // Whenever the coin in the selector are created

// Money control variables
money[0, VALUE] = 0;
money[0, X1] = 0;
money[0, Y1] = 0;

// Draw variables
sprite_area = spr_area_money;
width = 0;
height = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the Coin Control

// Local variables
var i, xs, ys;
var xx = x + 64, yy = y + 64;
var xo = xx;

// Get all the type of coins
if(drawed == false){
    for(i = 0; i &lt; array_height_2d(global.money); i++){
        if(global.money[i, TYPE] == COIN){
            // Get the coin information
            var m = instance_create(xx, yy, obj_money);
            m.type = DRAGABLE_RETURN;
            m.value = global.money[i, VALUE];
            m.tag = string(m.value);
            m.xo = xx;
            m.yo = yy;
            
            // Set the position information to the coin
            money[i, VALUE] = m.value;
            money[i, X1] = xx;
            money[i, Y1] = yy;
            
            // Calculate next space (X, Y)
            if(m.sprite != spr_null){
                xs = sprite_get_width(m.sprite) * 1.15;
                ys = sprite_get_height(m.sprite) * 1.15;
            }else{
                xs = sprite_get_width(m.sprite_area) * 1.15;
                ys = sprite_get_height(m.sprite_area) * 1.15;
            }
            
            // Jump to the next space
            xx += xs;
            if(!collision_point(xx + 16, yy, id, true, false)){
                yy += ys;
                xx = xo;
            }
        }
    }
    drawed = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Selector Control


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the Selector

// Get the width and height
width = sprite_get_width(sprite_area) * image_xscale;
height = sprite_get_height(sprite_area) * image_yscale;

// Draw the selector outline
draw_nineslice(spr_box0, x, y, x + width, y + height);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
